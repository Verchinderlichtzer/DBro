@page "/pesanan/form"
@page "/pesanan/form/{id}"
@layout AdminLayout
@inherits PesananFormBase

<PageTitle>Pesanan Langsung</PageTitle>

@if (!_loaded)
{
    <MudProgressCircular Indeterminate />
}
else
{
    <MudContainer MaxWidth="MaxWidth.ExtraLarge">
        
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@(_new ? Icons.Material.Filled.Add : Icons.Material.Filled.Edit)" Class="mr-3 mb-n1" />
            @(_new ? "Tambah Pesanan" : "Edit Pesanan")
        </MudText>
        
        <MudForm Model="_pesanan" @ref="_form" Validation="((PesananValidator)Validator).ValidateValue">
            <MudStack Row Class="wp-100 mb-3">
                <MudStack Class="flex-1">
                    <div class="w-125">
                        <MudTextField ReadOnly Label="Id" Value="_pesanan.Id" />
                    </div>
                    <MudStack Row>
                        <div class="w-225">
                            <MudDatePicker Label="Tanggal" @bind-Date="_pesanan.Tanggal" PickerVariant="PickerVariant.Dialog" DateFormat="dd MMMM yyyy" tabindex="-1" />
                        </div>
                        <div class="w-100">
                            <MudTimePicker Label="Jam" Editable @bind-Time="_pesanan.Jam" />
                        </div>
                    </MudStack>
                </MudStack>
                <MudStack Row Class="w-350">
                    <MudStack Class="flex-1">
                        <div>
                            <MudTextField ReadOnly Label="Subtotal" Adornment="Adornment.Start" AdornmentText="Rp" Value="_pesanan.Subtotal" Format="N0" />
                        </div>
                        <div>
                            <MudTextField ReadOnly Label="Potongan" Adornment="Adornment.Start" AdornmentText="Rp" Value="_pesanan.Potongan" Format="N0" />
                        </div>
                        <div>
                            <MudTextField ReadOnly Label="Total" Adornment="Adornment.Start" AdornmentText="Rp" Value="_pesanan.Total" Format="N0" />
                        </div>
                    </MudStack>
                    <MudStack Class="flex-1">
                        <div>
                            <MudNumericField Immediate HideSpinButtons T="int" @bind-Value="_pesanan.Bayar" Format="N0" Label="Bayar" Adornment="Adornment.Start" AdornmentText="Rp" For="() => _pesanan.Bayar" />
                        </div>
                        <div>
                            <MudTextField ReadOnly Value="Math.Abs(_pesanan.Sisa)" Format="N0" Label="@(_pesanan.Sisa < 0 ? "Kurang" : "Kembali")" Adornment="Adornment.Start" AdornmentText="Rp" AdornmentColor="_pesanan.Sisa < 0 ? Color.Error : Color.Default" />
                        </div>
                    </MudStack>
                </MudStack>
            </MudStack>

            <MudStack Row Class="mt-3">

                <MudDataGrid Class="flex-2 border-solid border mud-border-dark" Items="_pesanan.DetailPesanan" Elevation="2" Dense Bordered ShowColumnOptions="false">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Menu yang dipesan</MudText>
                        <MudSpacer />
                        <MudAutocomplete @ref="autocompleteMenu" T="Menu" @bind-Value="_menuTerpilih" @bind-Value:after="() => PilihMenu(_menuTerpilih)" Placeholder="Cari & pilih menu..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Dense CoerceText SearchFunc="SearchMenuAsync" ToStringFunc="@(x => x is null ? null : $"{x.Nama} ({x.Kategori.GetDescription()})")" MaxItems="128" />
                    </ToolBarContent>
                    <Columns>
                        <PropertyColumn Property="x => x.Menu.Nama" />
                        <PropertyColumn Property="x => x.Harga" HeaderClass="w-0" Format="N0" />
                        <TemplateColumn Title="Jumlah" HeaderClass="w-0">
                            <CellTemplate>
                                <MudNumericField Class="mt-n1" Immediate HideSpinButtons T="int" @bind-Value="context.Item.Jumlah" @bind-Value:after="Calculate" />
                            </CellTemplate>
                        </TemplateColumn>
                        <PropertyColumn Property="x => x.Subtotal" Format="N0" HeaderClass="w-0" />
                        <PropertyColumn Property="x => x.Diskon" Sortable="false" Format="P0" HeaderClass="w-0" />
                        <PropertyColumn Property="x => x.Total" Format="N0" HeaderClass="w-0" />
                        <TemplateColumn HeaderClass="w-0" Title="Opsi">
                            <CellTemplate>
                                <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="e => DeleteDetail(context.Item)" />
                            </CellTemplate>
                        </TemplateColumn>
                    </Columns>
                </MudDataGrid>
                <div class="flex-1">
                    @if (_pesanan.MenuPromoPesanan.Any())
                    {
                        <MudTable Class="border-solid border mud-border-dark" Items="_pesanan.MenuPromoPesanan" Dense Bordered>
                            <ToolBarContent>
                                <MudText Typo="Typo.h6">Promo didapat</MudText>
                            </ToolBarContent>
                            <HeaderContent>
                                <MudTh>Menu</MudTh>
                                <MudTh Class="w-0">Jumlah</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Menu">@context.Menu.Nama</MudTd>
                                <MudTd DataLabel="Jumlah">@context.Jumlah</MudTd>
                            </RowTemplate>
                        </MudTable>
                    }
                </div>
            </MudStack>
        </MudForm>
        
        <MudStack Row Class="mt-4">
            <MudSpacer />
            <MudStack Row Class="w-425">
                <MudButton Variant="Variant.Filled" Size="Size.Small" Color="_new ? Color.Success : Color.Warning" OnClick="SaveAsync" Class="flex-1">Simpan</MudButton>
                <MudButton Size="Size.Small" OnClick="@(e => NavManager.NavigateTo("/pesanan"))" Class="flex-1" Color="Color.Dark" Variant="Variant.Filled">Kembali</MudButton>
            </MudStack>
        </MudStack>

    </MudContainer>
}